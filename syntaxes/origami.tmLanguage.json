{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Origami",
  "scopeName": "source.origami",
  "patterns": [
    {
      "include": "#shebang"
    },
    {
      "include": "#expression"
    },
    {
      "include": "#comment"
    },
    {
      "include": "#template-substitution"
    }
  ],
  "repository": {
    "array": {
      "begin": "\\[",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.array.begin.origami"
        }
      },
      "end": "\\]",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.array.end.origami"
        }
      },
      "name": "meta.structure.array.origami",
      "patterns": [
        {
          "include": "#expression"
        },
        {
          "match": ",",
          "name": "punctuation.separator.array.origami"
        }
      ]
    },
    "assignment": {
      "name": "variable.origami",
      "match": "([^=\\(\\)\\{\\}\\[\\]\\$\\\"\\'\\/:`%,#\\s]+/?)\\s*([=:](?!>))",
      "captures": {
        "1": {
          "name": "entity.name.tag.origami"
        },
        "2": {
          "name": "keyword.operator.origami"
        }
      }
    },
    "at-builtin": {
      "name": "keyword.origami",
      "match": "@[^=\\(\\)\\{\\}\\[\\]\\$\\\"\\'\\/:`%,#\\s]+"
    },
    "colon-builtin": {
      "name": "keyword.control.origami",
      "match": "\\b(add:|addNextPrevious:|Array:|assign:|audit:|basename:|Boolean:|breakpoint:|Buffer:|builtins:|cache:|calc:|calendar:|changes:|clean:|clear:|code:|concat:|config:|copy:|crawl:|css.handler:|Date:|debug:|decodeURI:|decodeURIComponent:|deepMap:|deepMerge:|deepReverse:|deepTake:|defineds:|dev:|divide:|document:|documentation:|encodeURI:|encodeURIComponent:|entries:|equals:|Error:|explore:|false:|fetch:|files:|filter:|first:|forEach:|format:|from:|fromFn:|globs:|group:|handlers:|has:|help:|htm.handler:|html.handler:|if:|image:|indent:|index:|Infinity:|inherited:|inline:|inners:|Intl:|isAsyncMutableTree:|isAsyncTree:|isFinite:|isNaN:|isTraversable:|isTreelike:|jpeg.handler:|jpg.handler:|js:|js.handler:|JSON:|json:|json.handler:|jsonKeys:|jsonParse:|keys:|length:|log:|Map:|map:|mapReduce:|match:|Math:|md.handler:|mdHtml:|merge:|mjs.handler:|multiply:|NaN:|naturalOrder:|new:|node:|not:|null:|Number:|Object:|once:|or:|ori:|ori.handler:|oridocument.handler:|origami:|pack:|paginate:|parent:|parseFloat:|parseInt:|path:|paths:|plain:|post:|process:|project:|redirect:|regexMatch:|RegExp:|remove:|repeat:|resize:|reverse:|rss:|serve:|Set:|setDeep:|shell:|shuffle:|site:|sitemap:|slash:|slug:|sort:|static:|stdin:|String:|string:|subtract:|svg:|Symbol:|take:|text:|toFunction:|traverse:|traverseOrThrow:|traversePath:|tree:|true:|txt.handler:|undefined:|unpack:|url:|usage:|values:|version:|wasm.handler:|watch:|xhtml.handler:|yaml:|yaml.handler:|yamlParse:|yml.handler:)"
    },
    "comment": {
      "patterns": [
        {
          "name": "comment.line.origami",
          "begin": "(^|\\s)//",
          "end": "$"
        },
        {
          "name": "comment.block.origami",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "expression": {
      "name": "meta.expression.origami",
      "patterns": [
        {
          "include": "#array"
        },
        {
          "include": "#colon-builtin"
        },
        {
          "include": "#assignment"
        },
        {
          "include": "#at-builtin"
        },
        {
          "include": "#comment"
        },
        {
          "include": "#group"
        },
        {
          "include": "#identifier"
        },
        {
          "include": "#number"
        },
        {
          "include": "#operators"
        },
        {
          "include": "#separators"
        },
        {
          "include": "#string-double-quote"
        },
        {
          "include": "#string-single-quote"
        },
        {
          "include": "#template-literal"
        }
      ]
    },
    "group": {
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "meta.brace.round.js"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "meta.brace.round.js"
        }
      },
      "patterns": [
        {
          "include": "#expression"
        }
      ]
    },
    "identifier": {
      "name": "variable.origami",
      "match": "([^\\(\\)\\{\\}\\[\\]<>\\-\\.=,\\/:`\"\\'\\#→⇒…\\s]|(-(?!>))|(\\.(?!\\.\\.)))+"
    },
    "number": {
      "match": "(?x)        # turn on extended mode\n  -?        # an optional minus\n  (?:\n    0       # a zero\n    |       # ...or...\n    [1-9]   # a 1-9 character\n    \\d*     # followed by zero or more digits\n  )\n  (?:\n    (?:\n      \\.    # a period\n      \\d+   # followed by one or more digits\n    )?\n    (?:\n      [eE]  # an e character\n      [+-]? # followed by an option +/-\n      \\d+   # followed by one or more digits\n    )?      # make exponent optional\n  )?        # make decimal portion optional",
      "name": "constant.numeric.origami"
    },
    "operators": {
      "name": "keyword.operator.origami",
      "match": "=>|⇒|->|→|=|\\.\\.\\.|…"
    },
    "separators": {
      "name": "punctuation.separator.origami",
      "match": "[\\/:%,]"
    },
    "shebang": {
      "match": "^(#!.*)$",
      "captures": {
        "1": {
          "name": "comment.line.shebang.origami"
        }
      }
    },
    "string-character-escape": {
      "name": "constant.character.escape.origami",
      "match": "\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\{[0-9A-Fa-f]+\\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)"
    },
    "string-double-quote": {
      "name": "string.quoted.double.origami",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "include": "#string-character-escape"
        }
      ]
    },
    "string-single-quote": {
      "name": "string.quoted.single.origami",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "include": "#string-character-escape"
        }
      ]
    },
    "template-literal": {
      "name": "string.template.origami",
      "begin": "`",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.template.begin.origami"
        }
      },
      "end": "`",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.template.end.origami"
        }
      },
      "patterns": [
        {
          "include": "#template-substitution"
        },
        {
          "include": "#template-substitution-js"
        },
        {
          "include": "#string-character-escape"
        },
        {
          "include": "text.html.basic"
        }
      ]
    },
    "template-substitution": {
      "name": "string.interpolated.origami variable.parameter.origami",
      "begin": "\\{\\{",
      "beginCaptures": {
        "0": {
          "name": "support.constant.origami"
        }
      },
      "end": "\\}\\}",
      "endCaptures": {
        "0": {
          "name": "support.constant.origami"
        }
      },
      "patterns": [
        {
          "include": "#expression"
        }
      ]
    },
    "template-substitution-js": {
      "name": "string.interpolated.origami variable.parameter.origami",
      "begin": "\\$\\{",
      "beginCaptures": {
        "0": {
          "name": "support.constant.origami"
        }
      },
      "end": "\\}",
      "endCaptures": {
        "0": {
          "name": "support.constant.origami"
        }
      },
      "patterns": [
        {
          "include": "#expression"
        }
      ]
    }
  }
}
