{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Web Origami",
  "scopeName": "source.graphorigami",
  "patterns": [
    {
      "include": "#expression"
    },
    {
      "include": "#comment"
    },
    {
      "include": "#template-substitution"
    },
    {
      "include": "#operators"
    }
  ],
  "repository": {
    "array": {
      "begin": "\\[",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.array.begin.graphorigami"
        }
      },
      "end": "\\]",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.array.end.graphorigami"
        }
      },
      "name": "meta.structure.array.graphorigami",
      "patterns": [
        {
          "include": "#expression"
        },
        {
          "match": ",",
          "name": "punctuation.separator.array.graphorigami"
        }
      ]
    },
    "assignment": {
      "name": "variable.graphorigami",
      "match": "([^=\\(\\)\\{\\}\\[\\]\\$\\\"\\'\\/:`%,#\\s]+)\\s*(=)",
      "captures": {
        "1": {
          "name": "entity.name.tag.graphorigami"
        },
        "2": {
          "name": "keyword.operator.graphorigami"
        }
      }
    },
    "builtin": {
      "name": "keyword.graphorigami",
      "match": "@[^=\\(\\)\\{\\}\\[\\]\\$\\\"\\'\\/:`%,#\\s]+"
    },
    "comment": {
      "name": "comment.line.graphorigami",
      "begin": "#",
      "end": "$"
    },
    "expression": {
      "name": "meta.expression.graphorigami",
      "patterns": [
        {
          "include": "#array"
        },
        {
          "include": "#assignment"
        },
        {
          "include": "#builtin"
        },
        {
          "include": "#comment"
        },
        {
          "include": "#group"
        },
        {
          "include": "#identifier"
        },
        {
          "include": "#number"
        },
        {
          "include": "#operators"
        },
        {
          "include": "#separators"
        },
        {
          "include": "#string-double-quote"
        },
        {
          "include": "#string-single-quote"
        },
        {
          "include": "#template-literal"
        }
      ]
    },
    "group": {
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "meta.brace.round.js"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "meta.brace.round.js"
        }
      },
      "patterns": [
        {
          "include": "#expression"
        }
      ]
    },
    "identifier": {
      "name": "variable.graphorigami",
      "match": "[^=\\(\\)\\{\\}\\[\\]\\$\\\"\\'\\/:`%,#\\s]+"
    },
    "number": {
      "match": "(?x)        # turn on extended mode\n  -?        # an optional minus\n  (?:\n    0       # a zero\n    |       # ...or...\n    [1-9]   # a 1-9 character\n    \\d*     # followed by zero or more digits\n  )\n  (?:\n    (?:\n      \\.    # a period\n      \\d+   # followed by one or more digits\n    )?\n    (?:\n      [eE]  # an e character\n      [+-]? # followed by an option +/-\n      \\d+   # followed by one or more digits\n    )?      # make exponent optional\n  )?        # make decimal portion optional",
      "name": "constant.numeric.graphorigami"
    },
    "operators": {
      "name": "keyword.operator.graphorigami",
      "match": "[=]"
    },
    "separators": {
      "name": "punctuation.separator.graphorigami",
      "match": "[\\/:%,]"
    },
    "string-character-escape": {
      "name": "constant.character.escape.graphorigami",
      "match": "\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\{[0-9A-Fa-f]+\\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)"
    },
    "string-double-quote": {
      "name": "string.quoted.double.graphorigami",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "include": "#string-character-escape"
        }
      ]
    },
    "string-single-quote": {
      "name": "string.quoted.single.graphorigami",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "include": "#string-character-escape"
        }
      ]
    },
    "template-literal": {
      "name": "string.template.graphorigami",
      "begin": "`",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.template.begin.graphorigami"
        }
      },
      "end": "`",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.template.end.graphorigami"
        }
      },
      "patterns": [
        {
          "include": "#template-substitution"
        },
        {
          "include": "#string-character-escape"
        }
      ]
    },
    "template-substitution": {
      "name": "string.interpolated.graphorigami variable.parameter.graphorigami",
      "begin": "\\{\\{",
      "beginCaptures": {
        "0": {
          "name": "support.constant.graphorigami"
        }
      },
      "end": "\\}\\}",
      "endCaptures": {
        "0": {
          "name": "support.constant.graphorigami"
        }
      },
      "patterns": [
        {
          "include": "#expression"
        }
      ]
    }
  }
}
